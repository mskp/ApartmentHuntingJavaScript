/*
Approach â€” Declare an array that stores the farthest distance of a particular service for every block. Now for every block, go through every requirement and find the closest block that satisfies that requirements and change array value for that block with a minimum of the current value and maximum distance for any requirement. At the end return the index the minimum value in the array.
*/

function apartmentHunting(blocks, requirements) {    
    // Array to store the farthest distance of a particular service
    let maxDistancesAtBlocks = new Array(blocks.length).fill(Number.NEGATIVE_INFINITY);
    // Looping through all the blocks
    for (let i = 0; i < blocks.length; i++) {
        // Looping through all the requirements
        for (let requirement of requirements) {
            // Finding the distance of the nearest of the current requirement
            let nearestRequirementDistance = Number.POSITIVE_INFINITY;
            for (let j = 0; j < blocks.length; j++){
                // Checking whether the requirement exists in the current block or not
                let isPresent = blocks[j][requirement]
                if (isPresent)
                    nearestRequirementDistance = Math.min(nearestRequirementDistance, Math.abs(i - j));
            }
            // Storing the max distance in the array
            maxDistancesAtBlocks[i] = Math.max(maxDistancesAtBlocks[i], nearestRequirementDistance);
        }
    }
    // returning the index of the smallest value in the array
    let indexOfSmallestDistance = maxDistancesAtBlocks.indexOf(Math.min(...maxDistancesAtBlocks))
    return indexOfSmallestDistance;
}

// Do not edit the line below.
exports.apartmentHunting = apartmentHunting;

